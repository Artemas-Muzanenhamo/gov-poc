/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id "au.com.dius.pact" version "3.6.11"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-actuator:2.0.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-rest:2.0.4.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb:2.0.4.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-config:2.0.4.RELEASE'
    runtime 'org.springframework.boot:spring-boot-devtools:2.0.4.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.0.4.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'au.com.dius:pact-jvm-provider-junit5_2.12:3.6.11'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    testCompile 'org.mockito:mockito-junit-jupiter:2.17.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.0.4.RELEASE'
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.3'
    testCompile 'org.springframework:spring-jdbc:4.3.9.RELEASE'
    testCompile 'au.com.dius:pact-jvm-provider-junit5_2.12:3.6.11'
    testCompile 'com.github.rest-driver:rest-client-driver:2.0.0'
    testCompile 'au.com.dius:pact-jvm-model:3.6.11'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testCompile 'net.minidev:json-smart:2.3'
    testCompile 'ru.lanwen.wiremock:wiremock-junit5:1.1.1'
    testCompile 'com.github.tomakehurst:wiremock:2.19.0'
}

bootRun {
    systemProperties = System.properties
}

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

group = 'com.gov.zw'
version = '1.0.0-SNAPSHOT'
description = 'identity-service'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

pact {

    serviceProviders {

        // You can define as many as you need, but each must have a unique name
        identityProvider {
            // All the provider properties are optional, and have sensible defaults (shown below)
            protocol = 'http'
            host = 'localhost'
            port = 8080
            path = '/'

            // Or if you have many pact files in a directory
            hasPactsWith('manyConsumers') {

                // Will define a consumer for each pact file in the directory.
                // Consumer name is read from contents of pact file
                pactFileLocation = file('../pacts')

            }

        }

    }

}

//pact {
//
//    serviceProviders {
//
//        provider1 {
//            host = { lookupHostName() }
//
//            hasPactWith('identity-service') {
//                pactFile = file('../pacts')
//            }
//        }
//
//    }
//
//}