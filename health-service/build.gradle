plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${springVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compile "org.springframework.boot:spring-boot-autoconfigure-processor:${springVersion}"
    compile "javax.xml.bind:jaxb-api:${javaXmlVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-ribbon:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign:${springVersion}"
    compile "org.springframework.boot:spring-boot-autoconfigure-processor:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-netflix-eureka-client:${springVersion}"
    compile "org.mockito:mockito-junit-jupiter:${mockitoJunit5Version}"
    compile "com.google.code.gson:gson:2.8.6"
    runtime "org.springframework.boot:spring-boot-properties-migrator:${springVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springVersion}"
    testCompile "io.projectreactor:reactor-test:${reactorTestVersion}"
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${mongoVersion}"
    testCompile "au.com.dius:pact-jvm-consumer-junit5_2.12:${pactJunit5Version}"
    testCompile "io.rest-assured:rest-assured:${restAssuredVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
}

test {
    systemProperty 'pact.rootDir', "../pacts"
}

group = 'com.gov.zw'
version = "${releaseVersion}"
description = 'health-service'
sourceCompatibility = "${javaVersion}"

tasks.withType(JavaCompile) {
    options.encoding = "${charset}"
}

bootRun {
    systemProperties = System.properties
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "failed", "skipped"]
    }
}
