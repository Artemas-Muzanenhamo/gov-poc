/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:${springVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-rest:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-config:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-openfeign-core:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-openfeign-dependencies:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-contract-spec:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-netflix-core:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-ribbon:${springVersion}"
    compile "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    compile "org.apache.httpcomponents:httpclient:${httpClientVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testCompile "org.springframework:spring-test:${springTestVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${mongoVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springVersion}"
    testCompile "au.com.dius:pact-jvm-consumer-junit5_2.12:${pactJunit5Version}"
    testCompile "io.rest-assured:rest-assured:${restAssuredVersion}"
}

bootRun {
    systemProperties = System.properties
}

test {
    systemProperty 'pact.rootDir', "../pacts"
}

group = 'com.gov.zw'
version = '1.0.0-SNAPSHOT'
description = 'license-service'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}
